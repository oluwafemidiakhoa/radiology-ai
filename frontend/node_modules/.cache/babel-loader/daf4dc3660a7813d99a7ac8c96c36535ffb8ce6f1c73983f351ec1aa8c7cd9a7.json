{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adminidiakhoa\\\\radiology-ai\\\\frontend\\\\src\\\\UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { analyzeImage } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [report, setReport] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    setLoading(true);\n    setReport(\"\"); // Reset previous report\n\n    try {\n      const response = await analyzeImage(file);\n      if (response.AI_Analysis) {\n        setReport(response.AI_Analysis);\n      } else {\n        setReport(\"Error: Could not generate analysis.\");\n      }\n    } catch (error) {\n      setReport(\"Error: AI analysis failed.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Medical Image for AI Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Analyzing...\" : \"Analyze Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), report && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"AI Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: report\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"4ONFqfO1y9nN3uQHFaMSp9Bkx3g=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","analyzeImage","jsxDEV","_jsxDEV","UploadImage","_s","file","setFile","report","setReport","loading","setLoading","handleFileChange","e","target","files","handleUpload","response","AI_Analysis","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/adminidiakhoa/radiology-ai/frontend/src/UploadImage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { analyzeImage } from \"./api\";\r\n\r\nconst UploadImage = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [report, setReport] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    setLoading(true);\r\n    setReport(\"\"); // Reset previous report\r\n\r\n    try {\r\n      const response = await analyzeImage(file);\r\n      if (response.AI_Analysis) {\r\n        setReport(response.AI_Analysis);\r\n      } else {\r\n        setReport(\"Error: Could not generate analysis.\");\r\n      }\r\n    } catch (error) {\r\n      setReport(\"Error: AI analysis failed.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Medical Image for AI Analysis</h2>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? \"Analyzing...\" : \"Analyze Image\"}\r\n      </button>\r\n\r\n      {report && (\r\n        <div>\r\n          <h3>AI Report:</h3>\r\n          <p>{report}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACV,IAAI,EAAE;IACXK,UAAU,CAAC,IAAI,CAAC;IAChBF,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEf,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMhB,YAAY,CAACK,IAAI,CAAC;MACzC,IAAIW,QAAQ,CAACC,WAAW,EAAE;QACxBT,SAAS,CAACQ,QAAQ,CAACC,WAAW,CAAC;MACjC,CAAC,MAAM;QACLT,SAAS,CAAC,qCAAqC,CAAC;MAClD;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdV,SAAS,CAAC,4BAA4B,CAAC;IACzC;IACAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACER,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEd;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDrB,OAAA;MAAQwB,OAAO,EAAEX,YAAa;MAACY,QAAQ,EAAElB,OAAQ;MAAAU,QAAA,EAC9CV,OAAO,GAAG,cAAc,GAAG;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EAERhB,MAAM,iBACLL,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBrB,OAAA;QAAAiB,QAAA,EAAIZ;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3CID,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}