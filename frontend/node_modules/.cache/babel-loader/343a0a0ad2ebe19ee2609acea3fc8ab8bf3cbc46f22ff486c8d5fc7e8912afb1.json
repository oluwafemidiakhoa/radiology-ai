{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adminidiakhoa\\\\radiology-ai\\\\frontend\\\\src\\\\UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { analyzeImage } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [report, setReport] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setReport(\"\"); // Clear previous report\n    setError(\"\"); // Clear previous error\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please select an image before analyzing.\");\n      return;\n    }\n    setLoading(true);\n    setReport(\"\");\n    setError(\"\");\n    try {\n      const response = await analyzeImage(file);\n      if (response.AI_Analysis) {\n        setReport(response.AI_Analysis);\n      } else if (response.error) {\n        setError(response.error);\n      } else {\n        setError(\"Unexpected error: AI did not generate an analysis.\");\n      }\n    } catch (error) {\n      setError(\"Error: AI analysis failed.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Medical Image for AI Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Analyzing...\" : \"Analyze Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), report && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"AI Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: report\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"cWLaWmohsB12+vIsjD3+diEzF0c=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","analyzeImage","jsxDEV","_jsxDEV","UploadImage","_s","file","setFile","report","setReport","loading","setLoading","error","setError","handleFileChange","e","target","files","handleUpload","response","AI_Analysis","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/adminidiakhoa/radiology-ai/frontend/src/UploadImage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { analyzeImage } from \"./api\";\r\n\r\nconst UploadImage = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [report, setReport] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setReport(\"\"); // Clear previous report\r\n    setError(\"\"); // Clear previous error\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      setError(\"Please select an image before analyzing.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setReport(\"\");\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await analyzeImage(file);\r\n      if (response.AI_Analysis) {\r\n        setReport(response.AI_Analysis);\r\n      } else if (response.error) {\r\n        setError(response.error);\r\n      } else {\r\n        setError(\"Unexpected error: AI did not generate an analysis.\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error: AI analysis failed.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Medical Image for AI Analysis</h2>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? \"Analyzing...\" : \"Analyze Image\"}\r\n      </button>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      \r\n      {report && (\r\n        <div>\r\n          <h3>AI Report:</h3>\r\n          <p>{report}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}